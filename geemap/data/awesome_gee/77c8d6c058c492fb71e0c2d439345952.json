{"code": "var ca_lc_last = ee.Image(ca_lc.sort('system:time_start',false).first());\n\nvar from = [0, 20, 31, 32, 33, 40, 50, 80, 81, 100, 210, 220, 230];\nvar to =   [0, 1,  2,  3,  4,  5,  6,  7,  8,  9,   10,  11,  12 ];\nca_lc_last = ca_lc_last.remap(from, to);\n\nprint(\"Reclassed values:\");\nprint({\"from\": from, \"to\": to});\n\n// Define a dictionary which will be used to make legend and visualize image on map\nvar dict = {\n  \"names\": [\n  \"Unclassified\",\n  \"Water\",\n  \"Snow/Ice\",\n  \"Rock/Rubble\",\n  \"Exposed/Barren land\",\n  \"Bryoids\",\n  \"Shrubs\",\n  \"Wetland\",\n  \"Wetland-treed\",\n  \"Herbs\",\n  \"Coniferous\",\n  \"Broadleaf\",\n  \"Mixedwood\"\n  ],\n  \"colors\": [\n    \"#686868\",\n    \"#3333ff\",\n    \"#ccffff\",\n    \"#cccccc\",\n    \"#996633\",\n    \"#ffccff\",\n    \"#ffff00\",\n    \"#993399\",\n    \"#9933cc\",\n    \"#ccff33\",\n    \"#006600\",\n    \"#00cc00\",\n    \"#cc9900\"\n  ]};\n\n// Create a panel to hold the legend widget\nvar legend = ui.Panel({\n  style: {\n    position: 'bottom-left',\n    padding: '8px 15px'\n  }\n});\n\n// Function to generate the legend\nfunction addCategoricalLegend(panel, dict, title) {\n\n  // Create and add the legend title.\n  var legendTitle = ui.Label({\n    value: title,\n    style: {\n      fontWeight: 'bold',\n      fontSize: '18px',\n      margin: '0 0 4px 0',\n      padding: '0'\n    }\n  });\n  panel.add(legendTitle);\n\n  var loading = ui.Label('Loading legend...', {margin: '2px 0 4px 0'});\n  panel.add(loading);\n\n  // Creates and styles 1 row of the legend.\n  var makeRow = function(color, name) {\n    // Create the label that is actually the colored box.\n    var colorBox = ui.Label({\n      style: {\n        backgroundColor: color,\n        // Use padding to give the box height and width.\n        padding: '8px',\n        margin: '0 0 4px 0'\n      }\n    });\n\n    // Create the label filled with the description text.\n    var description = ui.Label({\n      value: name,\n      style: {margin: '0 0 4px 6px'}\n    });\n\n    return ui.Panel({\n      widgets: [colorBox, description],\n      layout: ui.Panel.Layout.Flow('horizontal')\n    });\n  };\n\n  // Get the list of palette colors and class names from the image.\n  var palette = dict['colors'];\n  var names = dict['names'];\n  loading.style().set('shown', false);\n\n  for (var i = 0; i \u003c names.length; i++) {\n    panel.add(makeRow(palette[i], names[i]));\n  }\n\n  Map.add(panel);\n\n}\n\n\n/*\n  // Display map and legend ///////////////////////////////////////////////////////////////////////////////\n*/\n\n// Add the legend to the map\naddCategoricalLegend(legend, dict, 'CA Annual forest LC map 2019');\n\nMap.setCenter(-97.61655457157725,55.6280720462063,4)\n\n// Add image to the map\nMap.addLayer(ca_lc_last.mask(ca_lc_last.neq(0)), {min:0, max:12, palette:dict['colors']}, 'CA Annual forest LC map 2019')\n", "environment": "[{\"type\":\"imageCollection\",\"name\":\"ca_lc\",\"record\":{\"id\":\"projects/sat-io/open-datasets/CA_FOREST_LC_VLCE2\"}}]", "location": "236.8209285300171,56.860815531511975,6"}