{"code": "var c1 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Freshwater Forested/Shrub Wetland')).map(function(feature){return feature.set('WETLAND_CD',1).copyProperties(feature)})\nvar c2 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Freshwater Emergent Wetland')).map(function(feature){return feature.set('WETLAND_CD',2).copyProperties(feature)})\nvar c3 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Freshwater Pond')).map(function(feature){return feature.set('WETLAND_CD',3).copyProperties(feature)})\nvar c4 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Estuarine and Marine Wetland')).map(function(feature){return feature.set('WETLAND_CD',4).copyProperties(feature)})\nvar c5 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Riverine')).map(function(feature){return feature.set('WETLAND_CD',5).copyProperties(feature)})\nvar c6 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Lake')).map(function(feature){return feature.set('WETLAND_CD',6).copyProperties(feature)})\nvar c7 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Estuarine and Marine Deepwater')).map(function(feature){return feature.set('WETLAND_CD',7).copyProperties(feature)})\nvar c8 = wetlands.filter(ee.Filter.eq('WETLAND_TY','Other')).map(function(feature){return feature.set('WETLAND_CD',8).copyProperties(feature)})\n\nvar empty = ee.Image().byte();\nvar vis = {min:1, max:8, \npalette: ['#008837','#7FC31C','#688CC0','#66C2A5','#0190BF','#13007C','#007C88','#B28653']}\n\nvar combined_collection = ee.FeatureCollection([c1,c2,c3,c4,c5,c5,c6,c7,c8]).flatten()\n\n\nvar wetlands_layer = combined_collection.reduceToImage(['WETLAND_CD'], ee.Reducer.mean())\nMap.addLayer(wetlands_layer, vis, 'Wetland layer');\n\n\n// Define a dictionary which will be used to make legend and visualize image on map\nvar dict = {\n  \"names\": [\n    \"Freshwater Forested/Shrub Wetland\",\n    \"Freshwater Emergent Wetland\",\n    \"Freshwater Pond\",\n    \"Estuarine and Marine Wetland\",\n    \"Riverine\", \n    \"Lake\",\n    \"Estuarine and Marine Deepwater\",\n    \"Other\",\n  ],\n  \"colors\": ['#008837','#7FC31C','#688CC0','#66C2A5','#0190BF','#13007C','#007C88','#B28653']};\n\n// Create a panel to hold the legend widget\nvar legend = ui.Panel({\n  style: {\n    position: 'bottom-left',\n    padding: '8px 15px'\n  }\n});\n\n// Function to generate the legend\nfunction addCategoricalLegend(panel, dict, title) {\n  \n  // Create and add the legend title.\n  var legendTitle = ui.Label({\n    value: title,\n    style: {\n      fontWeight: 'bold',\n      fontSize: '18px',\n      margin: '0 0 4px 0',\n      padding: '0'\n    }\n  });\n  panel.add(legendTitle);\n  \n  var loading = ui.Label('Loading legend...', {margin: '2px 0 4px 0'});\n  panel.add(loading);\n  \n  // Creates and styles 1 row of the legend.\n  var makeRow = function(color, name) {\n    // Create the label that is actually the colored box.\n    var colorBox = ui.Label({\n      style: {\n        backgroundColor: color,\n        // Use padding to give the box height and width.\n        padding: '8px',\n        margin: '0 0 4px 0'\n      }\n    });\n  \n    // Create the label filled with the description text.\n    var description = ui.Label({\n      value: name,\n      style: {margin: '0 0 4px 6px'}\n    });\n  \n    return ui.Panel({\n      widgets: [colorBox, description],\n      layout: ui.Panel.Layout.Flow('horizontal')\n    });\n  };\n  \n  // Get the list of palette colors and class names from the image.\n  var palette = dict['colors'];\n  var names = dict['names'];\n  loading.style().set('shown', false);\n  \n  for (var i = 0; i \u003c names.length; i++) {\n    panel.add(makeRow(palette[i], names[i]));\n  }\n  \n  Map.add(panel);\n  \n}\n\naddCategoricalLegend(legend, dict, 'NWI Categorical Legend');", "environment": "[{\"type\":\"table\",\"name\":\"wetlands\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/wetlands/FL_Wetlands\"}},{\"type\":\"table\",\"name\":\"historic_wetland\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/historic_wetlands/FL_Historic_Wetlands\"}},{\"type\":\"table\",\"name\":\"historic_wetland_project_metadata\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/hwpm/FL_Historic_Wetlands_Project_Metadata\"}},{\"type\":\"table\",\"name\":\"historic_map_info\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/hmi/FL_Wetlands_Historic_Map_Info\"}},{\"type\":\"table\",\"name\":\"co_riparian\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/riparian/CO_Riparian\"}},{\"type\":\"table\",\"name\":\"co_riparian_metadata\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/rpm/CO_Riparian_Project_Metadata\"}},{\"type\":\"table\",\"name\":\"wetlands_metadata\",\"record\":{\"id\":\"projects/sat-io/open-datasets/NWI/wpm/FL_Wetlands_Project_Metadata\"}}]", "location": "279.21399542179245,26.705038345201316,14"}