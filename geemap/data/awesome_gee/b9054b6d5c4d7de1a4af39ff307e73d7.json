{"code": "Map.centerObject(rge_alti5,6)\n\nMap.addLayer(rge_alti5, {}, 'elev', false);\n\n// Use the terrain algorithms to compute a hillshade with 8-bit values.\nvar shade = ee.Terrain.hillshade(rge_alti5);\nMap.addLayer(shade, {}, 'hillshade', false);\n\n// Create an \"ocean\" variable to be used for cartographic purposes\nvar ocean = rge_alti5.lte(0);\nMap.addLayer(ocean.mask(ocean), {palette:'000022'}, 'ocean', false);\n\n// Create a custom elevation palette from hex strings.\nvar elevationPalette = ['006600', '002200', 'fff700', 'ab7634', 'c4d0ff', 'ffffff'];\n// Use these visualization parameters, customized by location.\nvar visParams = {min: 1, max: 3000, palette: elevationPalette};\n\n// Create a mosaic of the ocean and the elevation data\nvar visualized = ee.ImageCollection([\n  // Mask the elevation to get only land\n  rge_alti5.mask(ocean.not()).visualize(visParams), \n  // Use the ocean mask directly to display ocean.\n  ocean.mask(ocean).visualize({palette:'000022'})\n]).mosaic();\n\n// Note that the visualization image doesn't require visualization parameters.\nMap.addLayer(visualized, {}, 'elev palette');", "environment": "[{\"type\":\"image\",\"name\":\"rge_alti5\",\"record\":{\"id\":\"projects/sat-io/open-datasets/IGN_RGE_Alti_5m\"}}]", "location": "1.3530467325907125,46.76411114193325,6"}