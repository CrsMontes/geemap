{"code": "// Visualization for WRI/GPPD/power_plants\nvar table = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_power_plant_DB_1-3\");\n\n// Get a color from a fuel\nvar fuelColor = ee.Dictionary({\n  'Coal': '000000',\n  'Oil': '593704',\n  'Gas': 'BC80BD',\n  'Hydro': '0565A6',\n  'Nuclear': 'E31A1C',\n  'Solar': 'FF7F00',\n  'Waste': '6A3D9A',\n  'Wind': '5CA2D1',\n  'Geothermal': 'FDBF6F',\n  'Biomass': '229A00'\n});\n\n// List of fuels to add to the map\nvar fuels = ['Coal', 'Oil', 'Gas', 'Hydro', 'Nuclear', 'Solar', 'Waste',\n    'Wind', 'Geothermal', 'Biomass'];\n\n/**\n * Computes size from capacity and color from fuel type.\n *\n * @param {!ee.Geometry.Point} pt A point\n * @return {!ee.Geometry.Point} Input point with added style dictionary.\n */\nfunction addStyle(pt) {\n  var size = ee.Number(pt.get('capacity_mw')).sqrt().divide(10).add(2);\n  var color = fuelColor.get(pt.get('primary_fuel'));\n  return pt.set('styleProperty', ee.Dictionary({'pointSize': size, 'color': color}));\n}\n\n// Make a FeatureCollection out of the power plant data table\nvar pp = ee.FeatureCollection(table).map(addStyle);\nprint(pp.first());\n\n/**\n * Adds power plants of a certain fuel type to the map.\n *\n * @param {string} fuel A fuel type\n */\nfunction addLayer(fuel) {\n  print(fuel);\n  Map.addLayer(pp.filter(ee.Filter.eq('primary_fuel', fuel)).style({styleProperty: 'styleProperty', neighborhood: 50}), {}, fuel, true, 0.65);\n}\n\n// Apply `addLayer` to each record in `fuels`\nfuelColor.keys().getInfo().map(addLayer);\n", "environment": "[]", "location": "NaN,19.626753868292255,3"}