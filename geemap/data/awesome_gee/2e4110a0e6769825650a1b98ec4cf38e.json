{"code": "print('FABDEM Collection size :',fabdem.size())\n\n//Explanation on setting default Projection here https://twitter.com/jstnbraaten/status/1494038930643042309\nvar elev = fabdem.mosaic().setDefaultProjection('EPSG:3857',null,30)\n\n//you can also use this incase you don't want to specify CRS\n//var elev = fabdem.mosaic().setDefaultProjection(glo30.first().projection())\n\n// Add the elevation to the map.  Play with the visualization tools\n// to get a better visualization.\nMap.addLayer(elev, {}, 'elev', false);\n\n// Use the terrain algorithms to compute a hillshade with 8-bit values.\nvar shade = ee.Terrain.hillshade(elev);\nMap.addLayer(shade, {}, 'hillshade', false);\n\n// Create an \"ocean\" variable to be used for cartographic purposes\nvar ocean = elev.lte(0);\nMap.addLayer(ocean.mask(ocean), {palette:'000022'}, 'ocean', false);\n\n// Create a custom elevation palette from hex strings.\nvar elevationPalette = ['006600', '002200', 'fff700', 'ab7634', 'c4d0ff', 'ffffff'];\n// Use these visualization parameters, customized by location.\nvar visParams = {min: 1, max: 3000, palette: elevationPalette};\n\n// Create a mosaic of the ocean and the elevation data\nvar visualized = ee.ImageCollection([\n  // Mask the elevation to get only land\n  elev.mask(ocean.not()).visualize(visParams), \n  // Use the ocean mask directly to display ocean.\n  ocean.mask(ocean).visualize({palette:'000022'})\n]).mosaic();\n\n// Note that the visualization image doesn't require visualization parameters.\nMap.addLayer(visualized.clip(countries), {}, 'elev palette');", "environment": "[{\"type\":\"imageCollection\",\"name\":\"fabdem\",\"record\":{\"id\":\"projects/sat-io/open-datasets/FABDEM\"}},{\"type\":\"table\",\"name\":\"countries\",\"record\":{\"id\":\"FAO/GAUL/2015/level0\"}}]", "location": "249.869580078125,44.42912959439768,6"}