{"code": "// Define a dictionary which will be used to make legend and visualize image on map\r\nvar dict = {\r\n  \"names\": [\r\n    \"Water\",\r\n    \"Wetlands\",\r\n    \"Tree Canopy\",\r\n    \"Shrubland\",\r\n    \"Herbaceous Vegetation\",\r\n    \"Barren\",\r\n    \"Structures\",\r\n    \"Impervious Surfaces\",\r\n    \"Impervious Roads\",\r\n    \"Tree Canopy over Structures\",\r\n    \"Tree Canopy over Impervious Surfaces\",\r\n    \"Tree Canopy over Impervious Roads\",\r\n    \"Aberdeen Proving Ground\"\r\n  ],\r\n  \"colors\": [\r\n    \"00C5FF\",\r\n    \"00A884\",\r\n    \"267300\",\r\n    \"4CE600\",\r\n    \"A3FF73\",\r\n    \"FFAA00\",\r\n    \"FF0000\",\r\n    \"9C9C9C\",\r\n    \"000000\",\r\n    \"737300\",\r\n    \"E6E600\",\r\n    \"FFFF73\",\r\n    \"C500FF\",\r\n  ]};\r\n\r\n// Create a panel to hold the legend widget\r\nvar legend = ui.Panel({\r\n  style: {\r\n    position: 'bottom-left',\r\n    padding: '8px 15px'\r\n  }\r\n});\r\n\r\n// Function to generate the legend\r\nfunction addCategoricalLegend(panel, dict, title) {\r\n  \r\n  // Create and add the legend title.\r\n  var legendTitle = ui.Label({\r\n    value: title,\r\n    style: {\r\n      fontWeight: 'bold',\r\n      fontSize: '18px',\r\n      margin: '0 0 4px 0',\r\n      padding: '0'\r\n    }\r\n  });\r\n  panel.add(legendTitle);\r\n  \r\n  var loading = ui.Label('Loading legend...', {margin: '2px 0 4px 0'});\r\n  panel.add(loading);\r\n  \r\n  // Creates and styles 1 row of the legend.\r\n  var makeRow = function(color, name) {\r\n    // Create the label that is actually the colored box.\r\n    var colorBox = ui.Label({\r\n      style: {\r\n        backgroundColor: color,\r\n        // Use padding to give the box height and width.\r\n        padding: '8px',\r\n        margin: '0 0 4px 0'\r\n      }\r\n    });\r\n  \r\n    // Create the label filled with the description text.\r\n    var description = ui.Label({\r\n      value: name,\r\n      style: {margin: '0 0 4px 6px'}\r\n    });\r\n  \r\n    return ui.Panel({\r\n      widgets: [colorBox, description],\r\n      layout: ui.Panel.Layout.Flow('horizontal')\r\n    });\r\n  };\r\n  \r\n  // Get the list of palette colors and class names from the image.\r\n  var palette = dict['colors'];\r\n  var names = dict['names'];\r\n  loading.style().set('shown', false);\r\n  \r\n  for (var i = 1; i \u003c names.length; i++) {\r\n    panel.add(makeRow(palette[i], names[i]));\r\n  }\r\n  \r\n  Map.add(panel);\r\n  \r\n}\r\n\r\n\r\n/*\r\n  // Display map and legend ///////////////////////////////////////////////////////////////////////////////\r\n*/\r\n\r\n// Add the legend to the map\r\naddCategoricalLegend(legend, dict, 'Land cover');\r\n\r\n// Add LC image to the map\r\nMap.addLayer(cbay_20132014, {min:1, max:13, palette:dict['colors']}, 'Chesapeake Bay 2013-2014 LC')\r\n\r\n// Center the map on image\r\n//Map.setCenter(2.047, 45.346, 5)\r\n\r\nMap.centerObject(cbay_20132014,8)", "environment": "[{\"type\":\"image\",\"name\":\"cbay_20132014\",\"record\":{\"id\":\"projects/sat-io/open-datasets/HRLC/Baywide_13Class_20132014\"}}]", "location": "282.60071604326606,40.50543761770946,8"}